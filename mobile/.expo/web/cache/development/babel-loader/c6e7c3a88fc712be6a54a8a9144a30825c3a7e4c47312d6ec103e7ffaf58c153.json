{"ast":null,"code":"var originalWarn = console.warn;\nexport var suppressWarnings = function suppressWarnings() {\n  console.warn = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var warningMessage = String(args[0] || '');\n    if (warningMessage.includes('deprecated')) {\n      console.log('Debug - Exact warning message:', JSON.stringify(warningMessage));\n    }\n    var warningsToSuppress = ['\"shadow*\" style props are deprecated. Use \"boxShadow\".', 'props.pointerEvents is deprecated. Use style.pointerEvents'];\n    var shouldSuppress = warningsToSuppress.includes(warningMessage);\n    if (!shouldSuppress) {\n      originalWarn.apply(console, args);\n    }\n  };\n};\nexport var restoreWarnings = function restoreWarnings() {\n  console.warn = originalWarn;\n};","map":{"version":3,"names":["originalWarn","console","warn","suppressWarnings","_len","arguments","length","args","Array","_key","warningMessage","String","includes","log","JSON","stringify","warningsToSuppress","shouldSuppress","apply","restoreWarnings"],"sources":["/project/sandbox/user-workspace/mobile/src/utils/suppressWarnings.ts"],"sourcesContent":["const originalWarn = console.warn;\n\nexport const suppressWarnings = () => {\n  console.warn = (...args) => {\n    // Convert args to string for easier matching\n    const warningMessage = String(args[0] || '');\n\n    // Debug: Log all warning messages to see their exact format\n    if (warningMessage.includes('deprecated')) {\n      console.log('Debug - Exact warning message:', JSON.stringify(warningMessage));\n    }\n\n    // Skip specific React Native Web warnings with exact messages\n    const warningsToSuppress = [\n      '\"shadow*\" style props are deprecated. Use \"boxShadow\".',\n      'props.pointerEvents is deprecated. Use style.pointerEvents'\n    ];\n\n    const shouldSuppress = warningsToSuppress.includes(warningMessage);\n\n    if (!shouldSuppress) {\n      originalWarn.apply(console, args);\n    }\n  };\n};\n\nexport const restoreWarnings = () => {\n  console.warn = originalWarn;\n};\n"],"mappings":"AAAA,IAAMA,YAAY,GAAGC,OAAO,CAACC,IAAI;AAEjC,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;EACpCF,OAAO,CAACC,IAAI,GAAG,YAAa;IAAA,SAAAE,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAATC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAErB,IAAMC,cAAc,GAAGC,MAAM,CAACJ,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IAG5C,IAAIG,cAAc,CAACE,QAAQ,CAAC,YAAY,CAAC,EAAE;MACzCX,OAAO,CAACY,GAAG,CAAC,gCAAgC,EAAEC,IAAI,CAACC,SAAS,CAACL,cAAc,CAAC,CAAC;IAC/E;IAGA,IAAMM,kBAAkB,GAAG,CACzB,wDAAwD,EACxD,4DAA4D,CAC7D;IAED,IAAMC,cAAc,GAAGD,kBAAkB,CAACJ,QAAQ,CAACF,cAAc,CAAC;IAElE,IAAI,CAACO,cAAc,EAAE;MACnBjB,YAAY,CAACkB,KAAK,CAACjB,OAAO,EAAEM,IAAI,CAAC;IACnC;EACF,CAAC;AACH,CAAC;AAED,OAAO,IAAMY,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;EACnClB,OAAO,CAACC,IAAI,GAAGF,YAAY;AAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}